// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model User {
  id                     String           @id @default(cuid())
  email                  String           @unique
  createdAt              DateTime         @default(now())
  updatedAt              DateTime         @updatedAt
  name                   String?
  role                   String
  projects               PartnerProject[]
  communicationsSent     Communication[]  @relation("sender")
  communicationsReceived Communication[]  @relation("recipient")
  partner                Partner?         @relation(fields: [partnerId], references: [id])
  partnerId              String?
}

model Partner {
  id               String           @id @default(cuid())
  name             String           @unique
  email            String?          @unique
  phone            String?
  projects         PartnerProject[]
  territory        String?
  summary          String?
  primaryContact   String?
  technicalContact String?
  legalContact     String?
  employees        User[]
}

model PartnerProject {
  id             String          @id @default(cuid())
  deviceType     String
  jiraProject    String
  partner        Partner        @relation(fields: [partnerId], references: [id])
  partnerId      String
  tpm            User            @relation(fields: [tpmId], references: [id])
  tpmId          String
  communications Communication[]
}

model Communication {
  id               String          @id @default(cuid())
  type             String
  header           String?
  content          String?
  date             DateTime
  partnerProject   PartnerProject? @relation(fields: [partnerProjectId], references: [id])
  partnerProjectId String?
  sender           User            @relation("sender", fields: [senderId], references: [id])
  senderId         String
  recipient        User            @relation("recipient", fields: [recipientId], references: [id])
  recipientId      String
}
